<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Favorites</title>
    <link rel="icon" type="image/x-icon" href="../assets/images/creatorPassportIcon.ico">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="https://use.typekit.net/djz3fym.css">
    <link rel="stylesheet" href="assets/CSS/library.css">
    <link rel="stylesheet" href="assets/CSS/favorites.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />    <script src="https://code.jquery.com/jquery-3.7.0.min.js" integrity="sha256-2Pmvv0kuTBOenSvLm6bvfBSSHrUJ+3A7x6P5Ebd07/g=" crossorigin="anonymous"></script>
</head>
<body style="background-color: #36454F;">
    <div>
        <input class="likedVideoList" style="display: none;" value="<%= likedVideos %>" />
    </div>

    <!--topnav-->
    <div class="topNav" style="display: flex; flex-direction: row; justify-content: space-between;">
        <div>
            <a href="/">
                <img class="logo" src="../assets/images/creatorPassportIcon.png" alt="logo">
            </a>
        </div>
        <div style="display: flex; flex-direction: column; justify-content: center; width: 250px;">
            <div style="display: flex; flex-direction: row; justify-content: space-between; width: 100%; padding-right: 25px;">
                <div><a style="color: white;" href="/">Dashboard</a></div>
                <div><a style="color: white;" href="" id="tracks">Tracks</a></div>
                <div>
                    <a href="#">
                        <form action="/logout?_method=DELETE" method="POST" onsubmit="updateRememberMe();">
                            <button type="submit" style="all:unset; color: white;">Log Out</button>
                        </form>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div style="width: 100vw; height: 75px; position: absolute; top: 80px; background: #111623; color: #FFFFFF;">
        <div style="position: relative; display: flex; flex-direction: column; justify-content: center; height: 100%;">
            <div style="display: flex; justify-content: center;">
                <div><a href="/" class="header-options">dashboard</a></div>
                <div class="header-options" style="margin-left: 15px; margin-right: 15px; font-size: 20px;">/</div>
                <div><a href="/favorites" class="header-options" style="text-decoration: underline;">favorites</a></div>
            </div>
        </div>
    </div>

    <div class="content-container container">
        <div id="videoAndSidenav">
            <!-- video -->
            <div id="video-container">
                <div style="aspect-ratio: 16/9;">
                    <div id="video">
                        <!-- load in video -->
                    </div>
                </div>
            </div>
    
            <!-- sidenav -->
            <div id="sidenav-container">
                <div class="sidebarColumn">
                    <!-- load in sidenav -->
                </div>
            </div>
        </div>
    
        <!-- player nav -->
        <div id="player-nav">
            <div style="display: flex; flex-direction: row; justify-content: space-between; padding: 15px;">
                <div style="width: 100px; height: 48px; background: #2e91fc; display: flex; flex-direction: column; justify-content: center;">
                    <div style="margin-left: auto; margin-right: auto;">
                        <a id="back-button" style="color: white;"><i class="fa-solid fa-chevron-left"></i>  Back</a>
                    </div>
                </div>
                <div style="display: flex; flex-direction: column; justify-content: center;">
                    <div id="lesson-of"></div>
                </div>
                <div style="width: 100px; height: 48px; background: #2e91fc; display: flex; flex-direction: column; justify-content: center;">
                    <div style="margin-left: auto; margin-right: auto;">
                        <a id="next-button" style="color: white;">Next  <i class="fa-solid fa-chevron-right"></i></a>
                    </div>
                </div>
            </div>
        </div>
    
        <div style="display: flex; flex-direction: row; flex-wrap: nowrap; justify-content: center; margin-top: 25px;">
            <div class="below-vid-content">
                <div class="copyContent">
                    <div style="width: 100%; margin-left: auto; margin-right: auto; display: flex; flex-direction: row; justify-content: start; align-items: center;">
                        <div style="display: flex; flex-direction: row; justify-content: space-between; width: 150px;">
                            <div><button onclick="dislikeLesson();" class="noStyle" style="color: red;"><i class="fa-regular fa-heart" id="notLiked" style="display: none;"></i><i class="fa-solid fa-heart" id="isLiked"></i></button></div>
                        </div>
                    </div>
                    <div style="margin-top: 20px;">
                        <h3 id="currentLessonTitle"></h3>
                        <div id="copy">
                            <!-- copy goes here -->
                        </div>
                    </div>
                </div>
                <div class="downloadContent">
                    <h4><b>Resources</b></h4>
                    <a href="#">Download 1</a><br />
                    <a href="#">Download 2</a>
                </div>
            </div>
        </div>

    </div>
    
    <script type="text/javascript">
        let VidArray = [];

        let returnObject = {};
        returnObject.titles = [];
        returnObject.links = [];
        returnObject.copy = [];
        returnObject.module = [];

        let fullDataObj = {};
        fullDataObj.ID = [];
        fullDataObj.titleArray = [];
        fullDataObj.linkArray = [];
        fullDataObj.copyArray = [];

        let currentVideoLink;
        let currentVideoID;

        function likedVideoListFunction()
        {
            const likedVideoList = document.getElementsByClassName('likedVideoList')[0].value.split(',');
            const likedVideoListLength = likedVideoList.length;
            
            let temporaryModule = 0;
            let ajaxArray = [];

            for (let i = 0; i < likedVideoListLength; i++)
            {
                if (likedVideoList[i] !== '')
                {
                    VidArray.push(likedVideoList[i]);
                    fullDataObj.ID.push(likedVideoList[i]);

                    if (!ajaxArray.includes(`${likedVideoList[i].split('-')[0]}-${likedVideoList[i].split('-')[1]}`))
                    {
                        ajaxArray.push(`${likedVideoList[i].split('-')[0]}-${likedVideoList[i].split('-')[1]}`);
                    }
                    else{}
                }
            }
            // ajax gets full module
            videoList(ajaxArray);
        }
        likedVideoListFunction()
        
        function videoList(module)
        {         
            for (let i = 0; i < module.length; i++)
            {
                $.ajax({
                    type: "POST",
                    url: "/videoList",
                    data: module[i].split("-")[0] + "-" + module[i].split("-")[1],
                    success: function(res)
                    {  
                        for (let j = 0; j < res.titles.length; j++)
                        {
                            returnObject.titles.push(res.titles[j]);
                            returnObject.links.push(res.links[j]);
                            returnObject.copy.push(res.copy[j]);
                            returnObject.module.push(module[i]);
                        }
                    },
                    error: function(res)
                    {
                        console.log("error" + res);
                    },
                    async: false
                });
            }
            sortData(returnObject.titles, returnObject.links, returnObject.copy, returnObject.module);
            loadYoutubeIFrameApiScript();
        };

        // gives data of only the liked videos
        function sortData(titles, links, copy, trackMod)
        {
            let temporaryModule;
            const titleLength = titles.length;

            for (let i = 0; i < VidArray.length; i++)
            {
                for (let h = 0; h < titleLength; h++)
                {
                    if (`${Number(VidArray[i].split('-')[1])}.${Number(VidArray[i].split('-')[2])}` === `${titles[h].split(' - ')[0]}`)
                    {
                        if (`${trackMod[h].split('-')[0]}-${trackMod[h].split('-')[1]}` === `${VidArray[i].split('-')[0]}-${VidArray[i].split('-')[1]}`)
                        {
                            fullDataObj.titleArray.push(titles[h]);
                            fullDataObj.linkArray.push(links[h]);
                            fullDataObj.copyArray.push(copy[h]);
                        }
                    }
                }
            
            }

            let searchParams = new URLSearchParams(window.location.search)
            // gets the current video link
            if (searchParams.has('module'))
            {
                const videoParams = searchParams.get('module');
                const linksLength = returnObject.links.length;
                
                for (let i = 0; i < linksLength; i++)
                {
                    if (videoParams === fullDataObj.ID[i])
                    {
                        currentVideoLink = fullDataObj.linkArray[i];
                        currentVideoID = fullDataObj.ID[i];
                    }
                }
            }
            else
            {
                currentVideoLink = fullDataObj.linkArray[0];
                currentVideoID = fullDataObj.ID[0];
            }

            addToSidenav(fullDataObj.titleArray, fullDataObj.ID);
            pageStyling(fullDataObj.titleArray, fullDataObj.copyArray, fullDataObj.ID);
        }

        // YouTube Player API Reference for iframe Embeds
        function loadYoutubeIFrameApiScript()
        {
            const tag = document.createElement("script");
            tag.src = "https://www.youtube.com/iframe_api";

            const firstScriptTag = document.getElementsByTagName("script")[0];
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

            tag.onload = onYouTubeIframeAPIReady;
        };

        let player;
        function onYouTubeIframeAPIReady()
        {
            window.YT.ready(function()
            {
                player = new window.YT.Player('video',
                {
                    height: '100%',
                    width: '100%',
                    videoId: currentVideoLink,
                    playerVars:
                    {
                        'playsinline': 1,
                        'start': 0
                    }
                });
            });
        }

        // Make Sidenav
        function addToSidenav(titles, ID)
        {
            // generates sidenav
            if (titles)
            {
                const titlesLength = titles.length;

                if (document.querySelectorAll('.select-video').length <= titlesLength)
                {
                    let sideNav =
                    `<div style="display: flex; flex-direction: row; flex-wrap: nowrap; background-color: white;">
                        <div style="font-size: 24px; width: 66%; color: black; padding-left: 15px;" class="d-flex justify-content-center select-video">
                            <div style="display: flex; justify-content: center; flex-direction: row;">
                                <div>
                                    Favorite Videos
                                </div>
                            </div>
                        </div>
                        <div class="d-flex justify-content-center" style="width: 33%; color: #3d3d3d;">
                            <div style="display: flex; flex-direction: column; justify-content: center;">
                                <div>
                                    ${titlesLength} Lessons
                                </div>
                            </div>
                        </div>
                    </div>`;

                    for (let i = 0; i < titlesLength; i++)
                    {
                        sideNav +=
                        `<a class="d-flex select-video ps-3" id="${ID[i]}" href="/favorites?module=${ID[i]}">
                            <div style="display: flex; flex-direction: row; flex-wrap: nowrap; justify-content: flex-start; width: 100%;">
                                <div style="width: 45px">${i + 1}</div>
                                <div><img src="../assets/images/${ID[i]}.png" alt="lesson thumbnail" style="width: 120px; height: auto;" /></div>
                                <div class="titleFlex" style="width: 100%; padding-left: 15px; display: flex; flex-direction: column; justify-content: space-between;">
                                    <div>Track ${ID[i].split("-")[0]}: ${titles[i]}</div>
                                </div>
                                <div style="width: 24px;" class="check-container">
                                    
                                </div>
                            </div>
                        </a>`;
                    }
                    document.getElementsByClassName("sidebarColumn")[0].innerHTML = sideNav
                }
            }
        }

        // styling active lesson on sidenav and copy
        function pageStyling(titles, copy, ID)
        {
            const URLSection = currentVideoID;

            document.getElementById('copy').innerText = copy[Number(ID.indexOf(URLSection))];
            
            if (ID)
            {
                document.getElementById(currentVideoID).style.background = '#E0E0E0';
                document.getElementById(currentVideoID).style.color = 'black';
            }
        }

        let isLiked = true;
        // posts the video's current time, and duration when the user leaves page
        function dislikeLesson()
        {
            $.ajax({
                type: "patch",
                url: "/favorites:liked",
                data: {
                    'likedVid': currentVideoID,
                    'isLiked': isLiked
                },
                success: function (data)
                {
                    if (isLiked)
                    {
                        document.getElementById('notLiked').style.display = 'block';
                        document.getElementById('isLiked').style.display = 'none';
                    }
                    else
                    {
                        document.getElementById('notLiked').style.display = 'none';
                        document.getElementById('isLiked').style.display = 'block';
                    }
                }
            });
        }
 
    </script>

</body>
</html>


