<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
	<link rel="stylesheet" href="https://use.typekit.net/djz3fym.css" />
    <link rel="stylesheet" href="assets/CSS/library.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@48,400,0,0" />
</head>
<body>
    <div class="container">
        <div class="slider-wrapper">
            <button id="prev-slide" class="slide-button material-symbols-rounded">
                chevron_left
            </button>
            <div class="image-list">
                <img src="images/img-1.jpg" alt="img-1" class="image-item" />
                <img src="images/img-2.jpg" alt="img-2" class="image-item" />
                <img src="images/img-3.jpg" alt="img-3" class="image-item" />
                <img src="images/img-4.jpg" alt="img-4" class="image-item" />
                <img src="images/img-5.jpg" alt="img-5" class="image-item" />
                <img src="images/img-6.jpg" alt="img-6" class="image-item" />
                <img src="images/img-7.jpg" alt="img-7" class="image-item" />
                <img src="images/img-8.jpg" alt="img-8" class="image-item" />
                <img src="images/img-9.jpg" alt="img-9" class="image-item" />
                <img src="images/img-10.jpg" alt="img-10" class="image-item" />
            </div>
            <button id="next-slide" class="slide-button material-symbols-rounded">
                chevron_right
            </button>
        </div>
        <div class="slider-scrollbar">
            <div class="scrollbar-track">
                <div class="scrollbar-thumb">

                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        const initSlider = () => {
            const imageList = document.querySelector(".slider-wrapper .image-list");
            const slideButtons = document.querySelectorAll(".slider-wrapper .slide-button");
            const sliderScrollbar = document.querySelector(".container .slider-scrollbar");
            const scrollbarThumb = sliderScrollbar.querySelector(".scrollbar-thumb");
            const maxScrollLeft = imageList.scrollWidth - imageList.clientWidth;

            // Handle scrollbar thumb drag
            scrollbarThumb.addEventListener("mousedown", (e) =>
            {
                const startX = e.clientX;
                const thumbPosition = scrollbarThumb.offsetLeft;

                // Update thumb position on mouse move
                const handleMouseMove = (e) => 
                {
                    const deltaX = e.clientX - startX;
                    const newThumbPosition = thumbPosition + deltaX;
                    const maxThumbPosition = scrollbarThumb.getBoundingClientRect().width = scrollbarThumb.offsetWidth;
                    
                    const boundedPosition = Math.max(0, Math.min(maxThumbPosition, newThumbPosition));
                    const scrollPosition = (boundedPosition / maxThumbPosition) * maxScrollLeft;

                    scrollbarThumb.style.left = `${newThumbPosition}px`;
                    imageList.scrollLeft = scrollPosition;
                }

                // Remove event listeners on mouse up
                const handleMouseUp = () =>
                {
                    document.removeEventListener("mousemove", handleMouseMove);
                    document.removeEventListener("mouseup", handleMouseUp);
                }

                // Add event listeners for drag interaction
                document.addEventListener("mousemove", handleMouseMove);
                document.addEventListener("mouseup", handleMouseUp);
            })

            slideButtons.forEach(button => 
            {
                button.addEventListener("click", () => 
                {
                    const direction = button.id === "prev-slide" ? -1 : 1;
                    const scrollAmount = imageList.clientWidth * direction;
                    imageList.scrollBy({ left: scrollAmount, behavior: "smooth" });
                });
            });

            const handleSlideButtons = () => 
            {
                slideButtons[0].style.display = imageList.scrollLeft <= 0 ? "none" : "block";
                slideButtons[1].style.display = imageList.scrollLeft >= maxScrollLeft ? "none" : "block";
            }

            // Update scrollbar thumb position based on image scroll
            const updateScrollThumbPosition = () => 
            {
                const scrollPosition = imageList.scrollLeft;
                const thumbPosition = (scrollPosition / maxScrollLeft) * (sliderScrollbar.clientWidth - scrollbarThumb.offsetWidth);
                scrollbarThumb.style.left = `${thumbPosition}px`;
            }

            imageList.addEventListener("scroll", () => 
            {
                handleSlideButtons();
                updateScrollThumbPosition();
            });
        }

        window.addEventListener("load", initSlider);
    </script>
    
</body>
</html>