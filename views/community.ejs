<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1">
    <title>Community</title>
    <link rel="icon" type="image/x-icon" href="../assets/images/creatorPassportIcon.ico">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://use.typekit.net/djz3fym.css">
    <link rel="stylesheet" href="assets/CSS/library.css">
    <link rel="stylesheet" href="assets/CSS/community.css">
	<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@48,400,0,0" />
	<link rel="stylesheet" href="https://use.typekit.net/djz3fym.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-3.7.0.min.js" integrity="sha256-2Pmvv0kuTBOenSvLm6bvfBSSHrUJ+3A7x6P5Ebd07/g=" crossorigin="anonymous"></script>
</head>
<body>
    <input type="hidden" id="user" value="<%= userName %>" />
    <input type="hidden" id="img" value="<%= profileImg %>" />
    <input type="hidden" id="userID" value="<%= userID %>" />

    <div id="wrapper"  style="z-index: 1; position: relative;">
        <!--topnav-->
        <div id="topNavWrapper">
            <!--loaded from backend-->
        </div>

        <!--hero-->
        <div style="margin-top: 60px;">
            <div class="hero-title-black">
                <div style="top: 30px; position: relative;">
                    <div style="display: flex; justify-content: center; padding-bottom: 15px;"><h4 style="font-family: 'Roboto', sans-serif; font-size: 29px;">The Creator Passport</h4></div>
                    <div style="display: flex; justify-content: center; padding-bottom: 15px;"><h1 class="text-uppercase font-title">Community</h1></div>
                    <div style="display: flex; justify-content: center;">
                        <div class="menu-options">
                            <div><a href="/" class="header-options">dashboard</a></div>
                            <div><a href="/favorites" class="header-options">favorites</a></div>
                            <div><a href="#" class="header-options text-decoration-underline">community</a></div>
                            <div><a href="" class="header-options" id="liveTrainingsAnchor">live trainings</a></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- content -->
        <div class="community-content">
            <div style="width: 80%; min-height: 130px; background-color: #FFFFFF; padding: 10px; border-radius: 10px;">
                <div style="display: flex; flex-direction: row;">
                    <div style="height: 50px; width: 50px; display: flex; justify-content: center; align-items: center; overflow: hidden; border-radius: 50%; border: 1px solid #454545;">
                        <% if (profileImg) { %>
                            <img src="<%= profileImg %>" class="currentImgURL" alt="profile Image" />
                        <% } else { %>
                            <i class="fa-solid fa-user" style="font-size: 1.2rem;"></i>
                        <% } %>
                    </div>
                    <div style="width: calc(100% - 50px); margin-left: 20px;">
                        <form id="postForm" action="/create-post" enctype="multipart/form-data" method="POST">
                            <input type="text" id="postText" name="postText" placeholder="  Write something..." onInput="enableButton()" autocomplete="off"  style="width: 100%; height: 40px; border-radius: 20px; border: 2px solid #454545;" />
                            <input type='file' id="image-post" name="image-post" autocomplete="off" style="display: none;" accept='image/*' />
                        </form>
                        <div style="padding: 5px 10px 5px 10px; margin-top: 20px; display: flex; justify-content: space-between; align-items: center; border: 1px solid #e4e6eb; border-radius: 10px;">
                            <div style="font-weight: 700;">Add to your post</div>
                            <div style="height: 60px; display: flex; justify-content: space-between; align-items: center;">
                                <button class="noStyle" onclick="document.getElementById('image-post').click();">
                                    <img src="https://static.xx.fbcdn.net/rsrc.php/v3/yD/r/4lAYcqypgif.png" alt="image icon" style="height: 24px; width: 24px;">
                                </button>
                            </div>
                        </div>
                        <button type="button" onclick="createPost();" id="post-button" class="button-disabled noStyle" style="margin-top: 20px; border-radius: 10px; height: 40px; width: 100%; background: #0866FF; color: white;">Post</button>
                    </div>
                </div>
            </div>
        </div>
        <div id="pinned-post-list" style="display: flex; flex-direction: column; justify-content: center; align-items: center; margin-top: 30px;">
            <!--data uploaded here from backend-->
        </div>
        <div id="post-list" style="display: flex; flex-direction: column; justify-content: center; align-items: center; margin-bottom: 30px;">
            <!--data uploaded here from backend-->
        </div>
        
        <!--all posts modal-->
        <div class="modal fade" id="allPosts" role="dialog" aria-labelledby="allPosts" aria-hidden="true" tabindex="-1">
            <div class="modal-dialog modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
                <!--- Modal content --->
                <div class="modal-content">
                    <div class="modal-header">
                        <div id="profileAndUser"></div>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div id="userPosts-list" style="display: flex; flex-direction: column; justify-content: center; align-items: center;">

                        </div>
                    </div>
                </div>
            </div>
        </div>

         <!--delete confirmation modal-->
         <div class="modal fade" id="deleteConfirmation" role="dialog" aria-labelledby="deleteConfirmation" aria-hidden="true" tabindex="-1">
            <div class="modal-dialog modal-dialog modal-dialog-centered modal-dialog-scrollable modal-sm">
                <!--- Modal content --->
                <div class="modal-content">
                    <div class="modal-header" style="border-bottom: none;">
                        <div id="profileAndUser"></div>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" style="background-color: #FFFFFF;">
                        <div style="font-family: 'Roboto', sans-serif;">Are you sure you want to delete this post?</div>
                        <div style="display: flex; justify-content: center; margin-top: 25px;">
                            <div style="display: flex; flex-direction: row; justify-content: space-between; width: 300px;">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="button" class="btn btn-danger" id="deleteButton">Delete</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <script type="text/javascript" src="assets/JS/topnav.js"></script>

    <script type="text/javascript">
        topNav('community');

        function liveTrainingsAnchor()
		{
			const liveTrainingsString = '<%=liveTrainingsProgress%>';
			const liveTrainingsArray = liveTrainingsString.split(',');

			let lastSeen = 1;
			for (let i = 0; i < liveTrainingsArray.length; i++)
			{
				if (liveTrainingsArray[i].length)
				{
					lastSeen = i + 1;
				}
			}
		
			document.getElementById("liveTrainingsAnchor").href = `/live-trainings?lesson=${lastSeen}`;
		}
		liveTrainingsAnchor();

        let page = 1;
        function loadPosts(isPinned=false)
        {
            $.ajax({
                url: '/get-posts',
                type: 'GET',
                data: {
                    page: page,
                    isPinned: isPinned
                },
                success: function(data)
                {
                    displayData(data.posts, false, isPinned);
                    page++;
                },
                error: function(error)
                {
                    console.error('Error:', error);
                }
            });
        }
        loadPosts(true);
        loadPosts();

        // Load more posts when the user scrolls to the bottom of the page
        $(window).scroll(function()
        {
            if ($(window).scrollTop() + $(window).height() == $(document).height())
            {
                loadPosts();
            }
        });
        
        function displayData(data, newComment=false, isPinned=false)
        {
            let html = '';

            data.forEach(e =>
            {
                // for debugging
                if (typeof e._id !== 'string')
                {
                   console.log(typeof e)
                }

                if (newComment)
                {
                    html +=
                    `${createTableRow(e)}`;
                    const node = createNodeFromHTML(html);

                    const parentElement = document.getElementById(`parent${e._id}`);
                    const toReplaceElement = document.getElementById(`${e._id}`);

                    parentElement.replaceChild(node, toReplaceElement);
                }
                else
                {
                    html +=
                    `<div id="parent${e._id}" style="background: #FFFFFF; width: 80%; padding: 16px; margin-top: 30px; border-radius: 10px;">
                        ${createTableRow(e)}
                    </div>`;
                }
            });

            if (!newComment)
            {
                if (isPinned)
                {
                    $(`#pinned-post-list`).append(html);
                }
                else
                {
                    $(`#post-list`).append(html);
                }
            }
        }

        function createNodeFromHTML(htmlString)
        {
            const parser = new DOMParser();
            const doc = parser.parseFromString(htmlString, 'text/html');

            return doc.body.firstChild;
        }

        function createTableRow(result, isNewComment=false, isModal=false)
        {
            let user;
            if (typeof result.user.name !== 'undefined')
            {
                user = result.user.name;
            }
            else
            {
                user = document.getElementById('user').value;
            }

            let totalComments = 0;
            for (let i = 0; i < result.comments.length; i++)
            {
                if (result.comments[i].comments.length > 0)
                {
                    totalComments += result.comments[i].comments.length;
                }
                totalComments += 1;
            }

            let modalStyling = "";
            let modal= "";

            if (isModal)
            {
                modalStyling = "modalWidth";
                modal = "modal";
            }

            // different profile image styles
            let profileImg1 = userProfileImage(50, result.user);
            const profileImg2 = userProfileImage(40, result.user);
            const profileImg3 = userProfileImage(35, result.user, true);
            const profileImg6 = userProfileImage(40, result.user, true);


            let postElement =
            `<div id="${result._id}${modal}" class="${modalStyling}">
                <div style="display: flex; flex-direction: row; justify-content: space-between; align-items: center; flex-wrap: nowrap; width: 100%;">
                    <div style="display: flex; flex-direction: row; justify-content: flex-start; align-items: center; flex-wrap: nowrap;">`;

                    // if not a modal, then give the buttons that display the modal
                    if (!isModal)
                    {
                        postElement +=
                        `<div>
                            <button type="button" class="noStyle" onclick="getUserPosts('${user}');">${profileImg1}</button>
                        </div>
                        <div style="margin-left: 10px; display: flex; flex-direction: column;">
                            <div><button type="button" class="noStyle" onclick="getUserPosts('${user}');">${user}</button></div>
                            <div style="color: #65676B;">${formatDate(result.createdAt)}</div>
                        </div>
                    </div>`;
                    }
                    else
                    {
                        postElement +=
                        `<div>
                            ${profileImg1}
                        </div>
                        <div style="margin-left: 10px;">
                            <div>${user}</div>
                            <div style="color: #65676B;">${formatDate(result.createdAt)}</div>
                        </div>
                    </div>`;
                    }

            const isPinned = result.pin;

            if (user === document.getElementById('user').value || <%= isAdmin %>)
            {
                if (<%= isAdmin %>)
                {
                    postElement +=
                `<div style="display: flex; flex-direction: row; justify-content: space-between; width: 60px;">
                    <div style="position: relative">
                        <button type="button" class="noStyle" style="color: black;" onclick="pinPost('${result._id}', '${modal}');">`
                            if (isPinned)
                            {
                                postElement += 
                                `<i class="fa-solid fa-thumbtack" style="color: #FF0000;"></i>`;
                            }
                            else
                            {
                                postElement += 
                                `<i class="fa-solid fa-thumbtack"></i>`;
                            }
                            postElement += 
                        `</button>
                    </div>`
                }
                else
                {
                    if (isPinned)
                    {
                        postElement +=
                    `<div style="display: flex; flex-direction: row; justify-content: space-between; width: 60px;">
                        <div>
                            <i class="fa-solid fa-thumbtack" style="color: #FF0000;"></i>
                        </div>`;
                    }
                }

                postElement +=
                        `<div style="position: relative">
                            <button type="button" class="noStyle" style="color: black;" onclick="deletePostModal('${result._id}', '${modal}');">
                                <i class="fa-solid fa-trash-can"></i>
                            </button>
                        </div>
                    </div>
                </div>`;
            }
            else
            {
                if (isPinned)
                {
                    postElement += 
                    `<i class="fa-solid fa-thumbtack" style="color: #FF0000;"></i>`;
                }
                postElement += 
                `</div>`;
            }

            if (result.text && result.text.length > 0)
            {
                postElement +=
                `<div style="margin-top: 15px;">${result.text}</div>`;
            }
                
            if (result.img)
            {
                postElement +=
                `<div style="margin-top: 15px; display: flex; flex-direction: row; justify-content: center;">
                    <div>
                        <img src="${result.img}" alt="post image" style="border-radius: 10px;" />
                    </div>
                </div>`;
            }

            postElement +=
                `<div style="display: flex; flex-direction: row; justify-content: space-between;">
                    <div style="margin-top: 15px;"><i class="fa-regular fa-thumbs-up"></i> <span id="${result._id}Likes${modal}">${result.likes.length}</span></div>
                    <div style="margin-top: 15px;">${totalComments} <i class="fa-solid fa-comment"></i></div>
                </div>
                <br />
                <div style="display: flex; flex-direction: row; flex-wrap: nowrap; border-top: 1px solid #CED0D4; border-bottom: 1px solid #CED0D4; padding: 5px 0 5px 0;">
                    <div style="width: 50%;">
                        <button type="button" onclick="likeOrUnlikePost('${result._id}', '${modal}');" class="noStyle likeCommentButton">
                            <div>
                                <i class="fa-regular fa-thumbs-up"></i><span style="margin-left: 10px;">Like</span>
                            </div>
                        </button>
                    </div>
                    <div style="width: 50%;">
                        <button type="button" onclick="clickComment('${result._id}', '${modal}');" class="noStyle likeCommentButton">
                            <div>
                                <i class="fa-regular fa-comment"></i><span style="margin-left: 10px;">Comment</span>
                            </div>
                        </button>
                    </div>
                </div>
                <div id="${result._id}comments">`;

                const comment1Index = result.comments.length - 1;

            // adds comments
            // if more than 1 comment, show most recent comment and a button to view all comments
            if (totalComments > 1)
            {
                const comment1 = result.comments[comment1Index];
                const comment1Replies = comment1.comments;
                const comment1RepliesLength = comment1Replies.length;
                let profileImg4 = userProfileImage(40, comment1.user);

                    postElement +=
                    `<div style="margin-top: 10px">
                        <button class="noStyle" onclick="showComments('${result._id}', this, '${modal}')" style="color: #65676b;">View all comments</button>
                    </div>
                    <div style="display: flex; flex-direction: row; flex-wrap: nowrap; justify-content: space-between; width: 100%;">
                        <div style="margin-top: 15px; padding-right: 10px; display: flex; flex-direction: column; width: 50px;">
                            ${profileImg4}`;
                        
                        // replies pipe
                        if (comment1RepliesLength > 0)
                        {
                            postElement +=
                            `<div id="${comment1._id}replyPipe" class="pastReplyPipe${result._id}${modal}" style="display: none; height: calc(100% - 40px); width: 50px; padding-top: 5px;">
                                <div style="border-left: 2px solid #d8d9dc; height: 100%; margin-left: 20px;"></div>
                            </div>`;
                        }
                    
                        postElement +=
                            `<div class="${comment1._id}replyPipe${modal} replyPipe${modal}" style="display: none; height: calc(100% - 40px); width: 50px;">
                                <div style="border-left: 2px solid #d8d9dc; height: 100%; margin-left: 20px;"></div>
                            </div>
                        </div>
                        <div style="margin-top: 15px;width: 100%">
                            <div style="background: #F0F2F5; padding: 8px; border-radius: 10px;">
                                <div style="font-weight: 700; font-size: 13px;">${comment1.user.name}</div>
                                <div style="font-size: 15px;">${comment1.text}</div>
                            </div>
                            <div style="display: flex; flex-direction: row; justify-content: space-between">
                                <div style="display: flex; flex-direction: row; justify-content: flex-start">
                                    <div style="color: #65676b; font-size: 13px; margin-top: 4px;">${formatDate(comment1.createdAt)}</div>
                                    <div><button class="noStyle commentButtons" onclick="likeOrUnlikeComment('${result._id}', '${comment1._id}', '${modal}');">Like</button></div>
                                    <div><button class="noStyle commentButtons" onclick="replyOnCommentText('${comment1._id}', '', '${modal}');">Reply</button></div>
                                </div>
                                <div style="margin-top: 5px;">
                                    <i class="fa-regular fa-thumbs-up"></i> <span id="${comment1._id}Likes${modal}">${comment1.likes.length}</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>`;

                // replies abbreviated
                if (comment1RepliesLength > 0)
                {
                    let repliesAmount;
                    if (comment1RepliesLength > 1)
                    {
                        repliesAmount = `${comment1RepliesLength} Replies`;
                    }
                    else
                    {
                        repliesAmount = `${comment1RepliesLength} Reply`;
                    }

                    let profileImg4 = userProfileImage(35, comment1Replies[comment1RepliesLength - 1].user);
                
                postElement +=
                `<div  id="${comment1._id}replyAbbreviated${modal}" style="display: flex; flex-direction: row; flex-wrap: nowrap; width: 100%;">
                    <div style="display: flex; flex-direction: column;">
                        <div id="${comment1._id}replyPipe${modal}" class="pastReplyPipe${result._id}${modal}" style="display: none; height: 33px; width: 50px; padding-right: 5px;">
                            <div style="border-bottom: 2px solid #d8d9dc; border-left: 2px solid #d8d9dc; border-bottom-left-radius: 7px; height: 33px; margin-left: 20px;"></div>
                        </div>
                        <div class="${comment1._id}replyPipe${modal} replyPipe${modal}" style="display: none; height: 100% ;">
                            <div style="border-left: 2px solid #d8d9dc; height: 100%; margin-left: 20px;"></div>
                        </div>
                    </div>
                    <div class="replyAbbreviated${result._id}${modal}" onclick="displayReplies('${comment1._id}', '${modal}')" style="display: none; flex-direction: row; align-items: center; margin-top: 15px;">
                        <div>${profileImg4}</div>
                        <div class="hiddenReply">${comment1Replies[comment1RepliesLength - 1].user.name} replied · ${repliesAmount}</div>
                    </div>
                </div>
                <div id="allReplies${comment1._id}${modal}" style="display: none; flex-direction: column; width: 100%;">`;

                    // comment 1 replies
                    for (let i = 0; i < comment1RepliesLength; i++)
                    {
                        // replied user's profile image
                        let profileImg5 = userProfileImage(35, comment1Replies[i].user);

                    postElement +=
                    `<div style="display: flex; flex-direction: row; flex-wrap: nowrap; justify-content: space-between; width: 100%;">
                        <div style="display: flex; flex-direction: column;">
                            <div id="${comment1Replies[i]._id}replyPipe" class="pastReplyPipe${comment1._id}${modal}" style="display: block; height: 33px; width: 50px; padding-right: 5px;">
                                <div style="border-bottom: 2px solid #d8d9dc; border-left: 2px solid #d8d9dc; border-bottom-left-radius: 7px; height: 33px; margin-left: 20px;"></div>
                            </div>`
                            if (i !== comment1RepliesLength - 1)
                            {
                                postElement +=
                            `<div class="${comment1Replies[i]._id}replyPipe${modal}" style="display: block; height: 100%;">
                                <div style="border-left: 2px solid #d8d9dc; height: 100%; margin-left: 20px;"></div>
                            </div>`
                            }
                            else
                            {
                                postElement +=
                            `<div class="${comment1._id}replyPipe${modal} replyPipe${modal}" style="display: none; height: 100% ;">
                                <div style="border-left: 2px solid #d8d9dc; height: 100%; margin-left: 20px;"></div>
                            </div>`
                            }
                        postElement +=
                        `</div>
                        <div style="display: flex; flex-direction: column; width: 100%;">
                            <div style="margin-top: 15px; display: flex; flex-direction: row; width: 100%;">
                                <div style="display: flex; flex-direction: column;">
                                    <div>${profileImg5}</div>
                                    <div class="${comment1Replies[i]._id}replyPipe${modal} replyPipe${modal}" style="height: calc(100% - 35px); padding-top: 5px; display: none;">
                                        <div style="border-left: 2px solid #d8d9dc; height: 100%; margin-left: 17px;"></div>
                                    </div>
                                </div>
                                <div style="margin-left: 10px; width: 100%;">
                                    <div style="background: #F0F2F5; padding: 8px; border-radius: 10px;">
                                        <div style="font-weight: 700; font-size: 13px;">${comment1Replies[i].user.name}</div>
                                        <div style="font-size: 15px;">${comment1Replies[i].text}</div>
                                    </div>
                                    <div style="display: flex; flex-direction: row; justify-content: space-between">
                                        <div style="display: flex; flex-direction: row; justify-content: flex-start">
                                            <div style="color: #65676b; font-size: 13px; margin-top: 4px;">${formatDate(comment1Replies[i].createdAt)}</div>
                                            <div><button class="noStyle commentButtons" onclick="likeOrUnlikeReply('${result._id}', '${comment1._id}', '${comment1Replies[i]._id}', '${modal}');">Like</button></div>
                                            <div><button class="noStyle commentButtons" onclick="replyOnCommentText('${comment1Replies[i]._id}', '${comment1Replies[i].user.name}', '${modal}');">Reply</button></div>
                                        </div>
                                        <div style="margin-top: 5px;">
                                            <i class="fa-regular fa-thumbs-up"></i> <span id="${comment1Replies[i]._id}Likes${modal}">${comment1Replies[i].likes.length}</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="${comment1Replies[i]._id}${modal}" class="replyInput${modal}" style="display: none; flex-direction: row; flex-wrap: nowrap; justify-content: space-between; width: 100%;">
                                <div style="width: 50px; padding-right: 5px;">
                                    <div style="border-bottom: 2px solid #d8d9dc; border-left: 2px solid #d8d9dc; border-bottom-left-radius: 7px; height: 33px; margin-left: 17px;"></div>
                                </div>
                                <div style="display: flex; flex-direction: row; width: calc(100% - 50px);">
                                    <div style="margin-top: 15px; padding-right: 10px;">${profileImg3}</div>
                                    <div class="input-group" style="margin-top: 15px;">
                                        <input type="text" class="form-control" onFocusOut="buttonBlueOut('${comment1Replies[i]._id}', '${modal}')" 
                                        onfocus="buttonBlue('${comment1Replies[i]._id}', '${modal}')" id="${comment1Replies[i]._id}Text${modal}" 
                                        style="width: 100%; height: 40px; border-radius: 20px; background: #F0F2F5" />
                                        <button class="noStyle input-group-append" type="button" onclick="replyOnComment('${result._id}', '${comment1._id}', '${comment1Replies[i]._id}', '${modal}');">
                                            <i class="fa-regular fa-paper-plane" id="${comment1Replies[i]._id}icon${modal}"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>`;

                    // replies to replies
                    postElement +=
                    `</div>`;
                    }
                postElement +=
                `</div>`;
                }

                postElement +=
                `<div style="display: none; flex-direction: row; flex-wrap: nowrap; width: 100%;" class="replyInput${modal}" id="${comment1._id}${modal}">
                    <div style="width: 50px; padding-right: 5px;">
                        <div style="border-bottom: 2px solid #d8d9dc; border-left: 2px solid #d8d9dc; border-bottom-left-radius: 7px; height: 33px; margin-left: 20px;"></div>
                    </div>
                    <div style="display: flex; flex-direction: row; width: calc(100% - 50px);">
                        <div style="margin-top: 15px; padding-right: 10px;">${profileImg3}</div>
                        <div class="input-group" style="margin-top: 15px;">
                            <input type="text" class="form-control" onFocusOut="buttonBlueOut('${comment1._id}', '${modal}')" 
                            onfocus="buttonBlue('${comment1._id}', '${modal}')" id="${comment1._id}Text${modal}" 
                            style="width: 100%; height: 40px; border-radius: 20px; background: #F0F2F5" />
                            <button class="noStyle input-group-append" type="button" onclick="replyOnComment('${result._id}', '${comment1._id}', '${comment1._id}', '${modal}');">
                                <i class="fa-regular fa-paper-plane" id="${comment1._id}icon${modal}"></i>
                            </button>
                        </div>
                    </div>
                </div>
                <div id="hiddenComments${result._id}${modal}" style="display: none">`;

                // hidden unless clicked to show all comments ^
                for (let i = comment1Index - 1; i >= 0; i--) //comments shown in descending order
                {
                    let commentN = result.comments[i];
                    let commentNReplies = commentN.comments;
                    let commentNRepliesLength = commentNReplies.length;
                    let profileImg4 = userProfileImage(40, commentN.user);

                    postElement +=
                    `<div style="display: flex; flex-direction: row; flex-wrap: nowrap; width: 100%;">
                        <div style="margin-top: 15px; padding-right: 10px; display: flex; flex-direction: column;">
                            ${profileImg4}`;
                        
                        // replies pipe
                        if (commentNRepliesLength > 0)
                        {
                            postElement +=
                            `<div id="${commentN._id}pipe" class="pastReplyPipe${result._id}${modal}" style="display: none; height: calc(100% - 40px); padding-top: 4px; width: 50px">
                                <div style="border-left: 2px solid #d8d9dc; height: 100%; margin-left: 20px;"></div>
                            </div>`;
                        }
                            
                        postElement +=
                            `<div class="${commentN._id}replyPipe${modal} replyPipe${modal}" style="display: none; height: calc(100% - 40px); width: 50px;">
                                <div style="border-left: 2px solid #d8d9dc; height: 100%; margin-left: 20px;"></div>
                            </div>
                        </div>
                        <div style="margin-top: 15px; width: 100%">
                            <div style="background: #F0F2F5; padding: 8px; border-radius: 10px;">
                                <div style="font-weight: 700; font-size: 13px;">${commentN.user.name}</div>
                                <div style="font-size: 15px;">${commentN.text}</div>
                            </div>
                            <div style="display: flex; flex-direction: row; justify-content: space-between">
                                <div style="display: flex; flex-direction: row; justify-content: flex-start">
                                    <div style="color: #65676b; font-size: 13px; margin-top: 4px;">${formatDate(commentN.createdAt)}</div>
                                    <div><button class="noStyle commentButtons" onclick="likeOrUnlikeComment('${result._id}', '${commentN._id}', '${modal}');">Like</button></div>
                                    <div><button class="noStyle commentButtons" onclick="replyOnCommentText('${commentN._id}', '', '${modal}');">Reply</button></div>
                                </div>
                                <div style="margin-top: 5px;">
                                    <i class="fa-regular fa-thumbs-up"></i> <span id="${commentN._id}Likes${modal}">${commentN.likes.length}</span>
                                </div>
                            </div>
                        </div>
                    </div>`;

                    // replies abbreviated
                    if (commentNRepliesLength > 0)
                    {
                        let repliesAmount;
                        if (commentNRepliesLength > 1)
                        {
                            repliesAmount = `${commentNRepliesLength} Replies`;
                        }
                        else
                        {
                            repliesAmount = `${commentNRepliesLength} Reply`;
                        }

                        let profileImg4 = userProfileImage(35, commentNReplies[commentNRepliesLength - 1].user);

                        postElement +=
                    `<div  id="${commentN._id}replyAbbreviated${modal}" style="display: flex; flex-direction: row; flex-wrap: nowrap; width: 100%;">
                        <div style="display: flex; flex-direction: column;">
                            <div id="${commentN._id}replyPipe${modal}" class="pastReplyPipe${result._id}${modal}" style="display: none; height: 33px; width: 50px; padding-right: 5px;">
                                <div style="border-bottom: 2px solid #d8d9dc; border-left: 2px solid #d8d9dc; border-bottom-left-radius: 7px; height: 33px; margin-left: 20px;"></div>
                            </div>
                            <div class="${commentN._id}replyPipe${modal} replyPipe${modal}" style="display: none; height: 100%;">
                                <div style="border-left: 2px solid #d8d9dc; height: 100%; margin-left: 20px;"></div>
                            </div>
                        </div>
                        <div class="replyAbbreviated${result._id}${modal}" onclick="displayReplies('${commentN._id}', '${modal}')" style="display: none; flex-direction: row; align-items: center; margin-top: 15px;">
                            <div>${profileImg4}</div>
                            <div class="hiddenReply">${commentNReplies[commentNRepliesLength - 1].user.name} replied · ${repliesAmount}</div>
                        </div>
                    </div>
                    <div id="allReplies${commentN._id}${modal}" style="display: none; flex-direction: column; width: 100%;">`;
                    
                        // comment 1 replies
                        for (let j = 0; j < commentNRepliesLength; j++)
                        {
                            // replied user's profile image
                            let profileImg5 = userProfileImage(35, commentNReplies[j].user);

                        postElement +=
                        `<div style="display: flex; flex-direction: row; flex-wrap: nowrap; justify-content: space-between; width: 100%;">
                            <div style="display: flex; flex-direction: column;">
                                <div id="${commentNReplies[j]._id}replyPipe" class="pastReplyPipe${commentN._id}${modal}" style="display: block; height: 33px; width: 50px; padding-right: 5px;">
                                    <div style="border-bottom: 2px solid #d8d9dc; border-left: 2px solid #d8d9dc; border-bottom-left-radius: 7px; height: 33px; margin-left: 20px;"></div>
                                </div>`
                                if (j !== commentNRepliesLength - 1)
                                {
                                    postElement +=
                                `<div class="${commentNReplies[j]._id}replyPipe${modal}" style="display: block; height: 100%;">
                                    <div style="border-left: 2px solid #d8d9dc; height: 100%; margin-left: 20px;"></div>
                                </div>`
                                }
                                else
                                {
                                    postElement +=
                                `<div class="${commentN._id}replyPipe${modal} replyPipe${modal}" style="display: none; height: 100%;">
                                    <div style="border-left: 2px solid #d8d9dc; height: 100%; margin-left: 20px;"></div>
                                </div>`
                                }
                            postElement +=
                            `</div>
                            <div style="display: flex; flex-direction: column; width: 100%;">
                                <div style="margin-top: 15px; display: flex; flex-direction: row; width: 100%;">
                                    <div style="display: flex; flex-direction: column;">
                                        <div>${profileImg5}</div>
                                        <div class="${commentNReplies[j]._id}replyPipe${modal} replyPipe${modal}" style=" height: calc(100% - 35px); padding-top: 5px; display: none;">
                                            <div style="border-left: 2px solid #d8d9dc; height: 100%; margin-left: 17px;"></div>
                                        </div>
                                    </div>
                                    <div style="margin-left: 10px; width: 100%;">
                                        <div style="background: #F0F2F5; padding: 8px; border-radius: 10px;">
                                            <div style="font-weight: 700; font-size: 13px;">${commentNReplies[j].user.name}</div>
                                            <div style="font-size: 15px;">${commentNReplies[j].text}</div>
                                        </div>
                                        <div style="display: flex; flex-direction: row; justify-content: space-between">
                                            <div style="display: flex; flex-direction: row; justify-content: flex-start">
                                                <div style="color: #65676b; font-size: 13px; margin-top: 4px;">${formatDate(commentNReplies[j].createdAt)}</div>
                                                <div><button class="noStyle commentButtons" onclick="likeOrUnlikeReply('${result._id}', '${commentN._id}', '${commentNReplies[j]._id}', '${modal}');">Like</button></div>
                                                <div><button class="noStyle commentButtons" onclick="replyOnCommentText('${commentNReplies[j]._id}', '${commentNReplies[j].user.name}', '${modal}');">Reply</button></div>
                                            </div>
                                            <div style="margin-top: 5px;">
                                                <i class="fa-regular fa-thumbs-up"></i> <span id="${commentNReplies[j]._id}Likes${modal}">${commentNReplies[j].likes.length}</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div id="${commentNReplies[j]._id}${modal}" class="replyInput${modal}" style="display: none; flex-direction: row; flex-wrap: nowrap; justify-content: space-between; width: 100%;">
                                    <div style="width: 50px; padding-right: 5px;">
                                        <div style="border-bottom: 2px solid #d8d9dc; border-left: 2px solid #d8d9dc; border-bottom-left-radius: 7px; height: 33px; margin-left: 17px;"></div>
                                    </div>
                                    <div style="display: flex; flex-direction: row; width: calc(100% - 50px);">
                                        <div style="margin-top: 15px; padding-right: 10px;">${profileImg3}</div>
                                        <div class="input-group" style="margin-top: 15px;">
                                            <input type="text" class="form-control" onFocusOut="buttonBlueOut('${commentNReplies[j]._id}', '${modal}')" 
                                            onfocus="buttonBlue('${commentNReplies[j]._id}', '${modal}')" id="${commentNReplies[j]._id}Text${modal}" 
                                            style="width: 100%; height: 40px; border-radius: 20px; background: #F0F2F5" />
                                            <button class="noStyle input-group-append" type="button" onclick="replyOnComment('${result._id}', '${commentN._id}', '${commentNReplies[j]._id}', '${modal}');">
                                                <i class="fa-regular fa-paper-plane" id="${commentNReplies[j]._id}icon${modal}"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>`;

                        // replies to replies
                        postElement +=
                        `</div>`;
                        }
                    postElement +=
                    `</div>`;
                    }

                    // reply input
                    postElement +=
                    `<div style="display: none; flex-direction: row;" class="replyInput${modal}" id="${commentN._id}${modal}">
                        <div style="width: 50px; padding-right: 5px;">
                            <div style="border-bottom: 2px solid #d8d9dc; border-left: 2px solid #d8d9dc; border-bottom-left-radius: 7px; height: 33px; margin-left: 20px;"></div>
                        </div>
                        <div style="display: flex; flex-direction: row; width: calc(100% - 50px);">
                            <div style="margin-top: 15px; padding-right: 10px;">${profileImg3}</div>
                            <div class="input-group" style="margin-top: 15px;">
                                <input type="text" class="form-control" onFocusOut="buttonBlueOut('${commentN._id}', '${modal}')" onfocus="buttonBlue('${commentN._id}', '${modal}')" id="${commentN._id}Text${modal}" style="width: 100%; height: 40px; border-radius: 20px; background: #F0F2F5" />
                                <button class="noStyle input-group-append" type="button" onclick="replyOnComment('${result._id}', '${commentN._id}', '${commentN._id}', '${modal}');">
                                    <i class="fa-regular fa-paper-plane" id="${commentN._id}icon${modal}"></i>
                                </button>
                            </div>
                        </div>
                    </div>`;
                }
            }
            else
            {
                if (result.comments[0])
                {
                    postElement +=
                    `<div style="display: flex; flex-direction: row; flex-wrap: nowrap; justify-content: space-between; width: 100%;">
                        <div style="display: flex; flex-direction: column;">
                            <div style="margin-top: 15px; padding-right: 10px;">
                                ${profileImg2}
                            </div>
                            <div class="${result.comments[0]._id}replyPipe${modal} replyPipe${modal}" style="display: none; height: calc(100% - 40px); width: 50px; padding-top: 5px;">
                                <div style="border-left: 2px solid #d8d9dc; height: 100%; margin-left: 20px;"></div>
                            </div>
                        </div>
                        <div style="margin-top: 15px;width: 100%">
                            <div style="background: #F0F2F5; padding: 8px; border-radius: 10px;">
                                <div style="font-weight: 700; font-size: 13px;">${result.comments[0].user.name}</div>
                                <div style="font-size: 15px;">${result.comments[0].text}</div>
                            </div>
                            <div style="display: flex; flex-direction: row; justify-content: space-between; flex-wrap: nowrap;">
                                <div style="display: flex; flex-direction: row; justify-content: flex-start">
                                    <div style="color: #65676b; font-size: 13px; margin-top: 4px;">${formatDate(result.comments[0].createdAt)}</div>
                                    <div><button class="noStyle commentButtons" onclick="likeOrUnlikeComment('${result._id}', '${result.comments[0]._id}', '${modal}');">Like</button></div>
                                    <div><button class="noStyle commentButtons" onclick="replyOnCommentText('${result.comments[0]._id}', '', '${modal}');">Reply</button></div>
                                </div>
                                <div style="margin-top: 5px;">
                                    <i class="fa-regular fa-thumbs-up"></i> <span id="${result.comments[0]._id}Likes${modal}">${result.comments[0].likes.length}</span>
                                </div>
                            </div>
                        </div>
                    </div>                    
                    <div style="display: none; flex-direction: row;" class="replyInput${modal}" id="${result.comments[0]._id}">
                        <div style="width: 50px; padding-right: 5px;">
                            <div style="border-bottom: 2px solid #d8d9dc; border-left: 2px solid #d8d9dc; border-bottom-left-radius: 7px; height: 33px; margin-left: 20px;"></div>
                        </div>
                        <div style="display: flex; flex-direction: row; width: calc(100% - 50px);">
                            <div style="margin-top: 15px; padding-right: 10px;">${profileImg2}</div>
                            <div class="input-group" style="margin-top: 15px;">
                                <input type="text" class="form-control" onFocusOut="buttonBlueOut('${result.comments[0]._id}', '${modal}')" onfocus="buttonBlue('${result.comments[0]._id}', '${modal}')" id="${result.comments[0]._id}Text${modal}" style="width: 100%; height: 40px; border-radius: 20px; background: #F0F2F5" />
                                <button class="noStyle input-group-append" type="button" onclick="replyOnComment('${result._id}', '${result.comments[0]._id}', '${result.comments[0]._id}', '${modal}');">
                                    <i class="fa-regular fa-paper-plane" id="${result.comments[0]._id}icon${modal}"></i>
                                </button>
                            </div>
                        </div>
                    </div>`;
                }
            }

            // write comment bubble at the bottom
            if (!isNewComment)
            {
            postElement +=
                    `</div>
                    <div style="display: flex; flex-direction: row;">
                        <div style="margin-top: 15px; padding-right: 10px;">${profileImg6}</div>
                        <div class="input-group" style="margin-top: 15px;">
                            <input type="text" class="form-control" onFocusOut="buttonBlueOut('${result._id}}', '${modal}')" onfocus="buttonBlue('${result._id}}', '${modal}')" id="makeComment${result._id}${modal}" id="postText" placeholder="Write comment..." style="width: 100%; height: 40px; border-radius: 20px; background: #F0F2F5" />
                            <button class="noStyle input-group-append" type="button" onclick="makeComment('${result._id}', '${modal}');">
                                <i class="fa-regular fa-paper-plane" id="${result._id}}icon${modal}"></i>
                            </button>
                        </div>
                    </div>
                </div>`;
            }

            return postElement;
        }

        function showComments(postID, clickedButton, modal)
        {
            const hiddenComments = document.getElementById(`hiddenComments${postID}${modal}`);
            const hiddenReplies = document.getElementsByClassName(`pastReplyPipe${postID}${modal}`);
            const hiddenReplyAbbreviated = document.getElementsByClassName(`replyAbbreviated${postID}${modal}`);

            if (hiddenComments.style.display === 'none')
            {
                hiddenComments.style.display = 'block';
                clickedButton.innerText = 'Hide comments';
                
                for (let i = 0; i < hiddenReplies.length; i++)
                {
                    hiddenReplies[i].style.display = 'block';
                }
                for (let i = 0; i < hiddenReplyAbbreviated.length; i++)
                {
                    hiddenReplyAbbreviated[i].style.display = 'flex';
                }
            }
            else
            {
                hiddenComments.style.display = 'none';
                clickedButton.innerText = 'View all comments';

                for (let i = 0; i < hiddenReplies.length; i++)
                {
                    hiddenReplies[i].style.display = 'none';
                }
                for (let i = 0; i < hiddenReplyAbbreviated.length; i++)
                {
                    hiddenReplyAbbreviated[i].style.display = 'none';
                }
            }
        }

        function replyOnCommentText(textElement, user='', modal)
        {
            for (let i = 0; i < document.getElementsByClassName(`replyInput${modal}`).length; i++)
            {
                document.getElementsByClassName(`replyInput${modal}`)[i].style.display = 'none';
                document.getElementsByClassName(`replyPipe${modal}`)[i].style.display = 'none';
            }

            for (let i = 0; i < document.getElementsByClassName(`${textElement}replyPipe${modal}`).length; i++)
            {
                document.getElementsByClassName(`${textElement}replyPipe${modal}`)[i].style.display = 'block';
            }

            // if its a reply to a reply
            if (user !== '')
            {
                document.getElementById(`${textElement}Text${modal}`).value = `${user} `;
            }
            
            document.getElementById(`${textElement}${modal}`).style.display = 'flex';
            document.getElementById(`${textElement}Text${modal}`).focus();
        }

        function displayReplies(commentID, modal)
        {
            const hiddenReplies = document.getElementById(`allReplies${commentID}${modal}`);
            const hiddenReplyAbbreviated = document.getElementById(`${commentID}replyAbbreviated${modal}`);

            if (hiddenReplies.style.display === 'none')
            {
                hiddenReplies.style.display = 'flex';
                hiddenReplyAbbreviated.style.display = 'none';
            }
            else
            {
                hiddenReplies.style.display = 'none';
                hiddenReplyAbbreviated.style.display = 'flex';
            }
        }

        function userProfileImage(size, userData, currentUser=false)
        {
            let profileImg;

            if (currentUser)
            {
                user = document.getElementById('user').value;
                profileImg = document.getElementById('img').value;
            }
            else if (typeof userData.name !== 'undefined')
            {
                user = userData.name;

                if (userData.profileImg !== ''
                && userData.profileImg !== null
                && userData.profileImg !== undefined)
                {
                    profileImg = userData.profileImg;
                }
                else
                {
                    profileImg = "";
                }
            }
            else
            {
                user = document.getElementById('user').value;
                profileImg = document.getElementById('img').value;
            }

            if (profileImg.length <= 5)
            {
                profileImg = `
                <div style="height: ${size}px; width: ${size}px; border-radius: 50%; border: 1px solid #454545; display: flex; justify-content: center; align-items: center;">
                    <i class="fa-solid fa-user" style="font-size: 1.2rem;"></i>
                </div>`;
            }
            else
            {
                profileImg = `
                <div style="height: ${size}px; width: ${size}px; display: flex; justify-content: center; align-items: center; overflow: hidden; border-radius: 50%;" >
                    <img src="${profileImg}" class="currentImgURL" alt="profile Image"/>
                </div>`;
            }
            return profileImg;
        }

        function allUserPostsArray(data)
        {
            let postElement = 
            `<div style="background: #FFFFFF; width: 95%; padding: 16px; margin-top: 30px; border-radius: 10px;">
                <div style="display: flex; flex-direction: row; justify-content: space-between; align-items: center; flex-wrap: nowrap; width: 100%;">
                    <div style="display: flex; flex-direction: row; justify-content: flex-start; align-items: center; flex-wrap: nowrap;">
                        <div>${formatDate(data.createdAt)}</div>
                    </div>
                </div>
                <div style="margin-top: 15px;">${data.text}</div>
                <div style="display: flex; flex-direction: row; justify-content: space-between;">
                    <div style="margin-top: 15px;">
                        <i class="fa-regular fa-thumbs-up"></i> <span id="${data._id}Likes${modal}">${data.likes.length}</span>
                    </div>
                    <div style="margin-top: 15px;">${data.comments.length} <i class="fa-solid fa-comment"></i></div>
                </div>
                <div id="modalComments">`;

            // adds comments
            for (let i = data.comments.length - 1; i >= 0; i--)
            {
                postElement +=
                `<div style="margin-top: 15px;">${data.comments[i].text}</div>`;
            }

            postElement +=
                `</div>
                <br />

                <div style="display: flex; flex-direction: row; flex-wrap: nowrap; border-top: 1px solid #CED0D4; border-bottom: 1px solid #CED0D4; padding: 5px 0 5px 0;">
                    <div style="width: 50%;">
                        <button type="button" onclick="likeOrUnlikePost('${data._id}', '${modal}');" class="noStyle likeCommentButton">
                            <div>
                                <i class="fa-regular fa-thumbs-up"></i><span style="margin-left: 10px;">Like</span>
                            </div>
                        </button>
                    </div>
                    <div style="width: 50%;">
                        <button type="button" onclick="clickComment('${data._id}', '${modal}');" class="noStyle likeCommentButton">
                            <div>
                                <i class="fa-regular fa-comment"></i><span style="margin-left: 10px;">Comment</span>
                            </div>
                        </button>
                    </div>
                </div>

                <div class="input-group" style="margin-top: 15px;">
                    <input type="text" class="form-control" id="makeComment${data._id}${modal}" onFocusOut="buttonBlueOut('${data._id}', ${modal})" onfocus="buttonBlue('${data._id}', ${modal})" id="postText" placeholder="Write comment..." style="width: 100%; height: 40px; border-radius: 20px; background: #F0F2F5" />
                    <button class="noStyle input-group-append" type="button" onclick="makeComment('${data._id}', ${modal});">
                        <i class="fa-regular fa-paper-plane" id="${data._id}icon${modal}"></i>
                    </button>
                </div>
            </div>`;

            return postElement
        }

        function getInitials(name)
        {
            return name.split(' ').map(word => word[0].toUpperCase()).join('');
        }

        function formatDate(dateString)
        {
            if (!dateString)
            {
                return '';
            }
            else
            {
                const date = new Date(dateString);
                const now = new Date();
                const diffTime = Math.abs(now - date);
                const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));
                
                if (diffDays === 0)
                {
                    return 'Today';
                }
                else if (diffDays === 1)
                {
                    return 'Yesterday';
                }
                else if (diffDays <= 7)
                {
                    return `${diffDays} days ago`;
                }
                else
                {
                    return date.toLocaleDateString();
                }
            }
        }

        function createPost()
        {
            const formData = new FormData(document.getElementById('postForm'));

            fetch('/create-post',
            {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data =>
            {
                document.getElementById('postText').value = '';
                document.getElementById('post-button').classList.remove('button-enabled');
                document.getElementById('post-button').classList.add('button-disabled');
                
                const html =
                `<div id="parent${data._id}" style="background: #FFFFFF; width: 80%; padding: 16px; margin-top: 30px; border-radius: 10px;">
                    ${createTableRow(data)}
                </div>`;
                $('#post-list').prepend(html);
            })
            .catch(error =>
            {
                console.error(error);
            });
        }

        function makeComment(postId, modal)
        {
            let text = document.getElementById(`makeComment${postId}${modal}`).value;

            $.ajax({
                url: `/comment/${postId}`,
                type: 'POST',
                data:{
                    text: text,
                },
                success: function(data)
                {
                    console.log(data);
                    const recentComment = data.comments.length - 1;

                    $.ajax({
                        url: `/get-post/${postId}`,
                        type: 'GET',
                        success: function(data)
                        {
                            displayData([data], true)
                        },
                        error: function(error)
                        {
                            console.error(error);
                        }
                    });
                },
                error: function(error)
                {
                    console.error("error" + error);
                }
            });
        }

        function replyOnComment(postId, commentId, replyID, modal)
        {
            let text;

            text = document.getElementById(`${replyID}Text${modal}`).value;

            $.ajax({
                url: `/comment/${postId}/${commentId}`,
                type: 'POST',
                data:{
                    text: text,
                },
                success: function(data)
                {
                    $.ajax({
                        url: `/get-post/${postId}`,
                        type: 'GET',
                        success: function(data)
                        {
                            displayData([data], true)
                        },
                        error: function(error)
                        {
                            console.error(error);
                        }
                    });
                },
                error: function(error)
                {
                    console.error("error" + error);
                }
            });
        }

        function likeOrUnlikeReply(postId, commentId, replyID, modal)
        {
            $.ajax({
                url: `/like-reply/${postId}/${commentId}/${replyID}`,
                type: 'POST',
                success: function(data)
                {
                    document.getElementById(`${replyID}Likes${modal}`).innerText = data.length;
                },
                error: function(error)
                {
                    console.error(error);
                }
            });
        }
        
        function likeOrUnlikePost(postId, modal)
        {
            $.ajax({
                url: `/like/${postId}`,
                type: 'POST',
                success: function(data)
                {
                    document.getElementById(`${postId}Likes${modal}`).innerText = data.length;
                },
                error: function(error)
                {
                    console.error(error);
                }
            });
        }

        function likeOrUnlikeComment(postId, commentID, modal)
        {
            $.ajax({
                url: `/like-comment/${postId}/${commentID}/`,
                type: 'POST',
                success: function(data)
                {
                    document.getElementById(`${commentID}Likes${modal}`).innerText = data.length;
                },
                error: function(error)
                {
                    console.error(error);
                }
            });
        }

        function deletePostModal(postId, modal)
        {
            const deleteButton = document.getElementById('deleteButton');
            deleteButton.addEventListener('click', function() {
                deletePost(postId, modal);
            });

            $('#deleteConfirmation').modal('show');
        }
        
        function deletePost(postId, modal)
        {
            $.ajax({
                url: `/${postId}`,
                type: 'DELETE',
                success: function(data)
                {
                    document.getElementById(`${postId}${modal}`).style.display = "none";
                    document.getElementById(`parent${postId}`).style.display = "none";
                    
                    if (modal === "modal")
                    {
                        document.getElementById(`${postId}`).style.display = "none";
                    }
                    $('#deleteConfirmation').modal('hide');
                },
                error: function(error)
                {
                    console.error(error);
                }
            });
        }

        function pinPost(postId, modal)
        {
            $.ajax({
                url: `/pin/${postId}`,
                type: 'GET',
                success: function(data)
                {
                    location.reload();
                },
                error: function(error)
                {
                    console.error(error);
                }
            });
        }

        function getUserPosts(username)
        {
            $.ajax({
                url: `/user/${username}`,
                type: 'GET',
                success: function(data)
                {
                    if (data.length > 0)
                    {
                        let user;
                        let profileImg;

                        if (typeof data[0].user.name !== 'undefined')
                        {
                            user = data[0].user.name;

                            if (data[0].user.profileImg !== '' && data[0].user.profileImg !== null && data[0].user.profileImg !== undefined)
                            {
                                profileImg = data[0].user.profileImg;
                            }
                            else
                            {
                                profileImg = getInitials(user);
                            }
                        }
                        else
                        {
                            user = document.getElementById('user').value;
                            profileImg = document.getElementById('img').value;
                        }

                        if (profileImg.length <= 5)
                        {
                            profileImg =
                            `<div style="height: 50px; width: 50px; border-radius: 50%;">${profileImg}</div>`;
                        }
                        else
                        {
                            profileImg =
                            `<img src="${profileImg}" class="currentImgURL" alt="profile Image" />`;
                        }

                        $('#profileAndUser').html(
                            `<div style="display: flex; flex-direction: row; justify-content: flex-start; align-items: center; flex-wrap: nowrap;">
                                <div style="border-radius: 50%; display: flex; height: 75px; width: 75px; justify-content: center; align-items: center; overflow: hidden;">${profileImg}</div>
                                <div style="margin-left: 10px;">${user}</div>
                            </div>`
                        );
                    }
                    
                    for (let i = 0; i < data.length; i++)
                    {
                        $('#userPosts-list').append(createTableRow(data[i], false, "modalWidth"));
                    }
                },
                error: function(error)
                {
                    console.error(error);
                }
            });

            $('#allPosts').modal('show');
        }

		function submitUpdate()
		{
			document.getElementById('buffer').style.display = 'block';

			let email;

			if (document.getElementById('newEmail').value)
			{
				email = document.getElementById('newEmail').value.toLowerCase().trim();
			}
			else
			{
				email = document.getElementById('currentEmail').innerText;
			}

			document.getElementById('email').value = email;

			let formData = new FormData(document.getElementById('profileForm'));

			fetch('/update-user',
            {
				method: 'POST',
				body: formData
			})
			.then(response => response.json())
			.then(data =>
            {
				console.log(data);
				changeProfile(data);
				document.getElementById('buffer').style.display = 'none';
				document.getElementById('success-message').style.display = 'block';
			})
			.catch(error =>
            {
				console.error(error);
			});
		}

		function changeProfile(data)
		{
			if (data.profileImg)
			{
				document.getElementById('currentImgURL').src = data.profileImg;
			}
			if (data.email)
			{
				document.getElementById('currentEmail').innerText = data.email;
				document.getElementById('currentEmail').style.display = 'block';
				document.getElementById('editEmail').style.display = 'none';
			}
		}

		// changes the image to the selected file
		document.getElementById('profileImg').addEventListener('change', function(event)
		{
			var reader = new FileReader();

			reader.onload = function(e)
            {
				// The file's text will be printed here
				document.getElementById('currentImgURL').src = e.target.result;
			};

			// read the file as text
			reader.readAsDataURL(event.target.files[0]);
		});

		function editEmail()
		{
			const currentEmail = document.getElementById('currentEmail');
			const editEmail = document.getElementById('editEmail');
			const submitUpdate = document.getElementById('submit-update');

			if (currentEmail.style.display === 'none')
			{
				currentEmail.style.display = 'block';
				editEmail.style.display = 'none';
				submitUpdate.style.display = 'none';
			}
			else
			{
				currentEmail.style.display = 'none';
				editEmail.style.display = 'block';
				submitUpdate.style.display = 'block';
			}
		}

        function enableButton()
        {
            const button = document.getElementById('post-button');
            const input = document.getElementById('postText');

            if (input.value.length > 0)
            {
                button.classList.remove('button-disabled');
                button.classList.add('button-enabled');
            }
            else
            {
                button.classList.add('button-disabled');
                button.classList.remove('button-enabled');
            }
        }

        function clickComment(postID, modal)
        {
            // focuses on comment input
            document.getElementById(`makeComment${postID}${modal}`).focus();
        }

        function buttonBlue(id, modal)
        {
            document.getElementById(`${id}icon${modal}`).style.color = '#1877F2';
        }

        function buttonBlueOut(id, modal)
        {
            document.getElementById(`${id}icon${modal}`).style.color = '#333333';
        }
    </script>
</body>
</html>